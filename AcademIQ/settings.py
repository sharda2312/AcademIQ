"""
Django settings for AcademIQ project.

Generated by 'django-admin startproject' using Django 5.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/5.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/5.1/ref/settings/
"""

from pathlib import Path
import os

from whitenoise.storage import CompressedManifestStaticFilesStorage


from dotenv import load_dotenv
load_dotenv()

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/5.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = "django-insecure-hoxh^^3k!va5-_j7gbvm5guu^ep9#1c9hdyao=ox#e_mvl5x#3"

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

AUTH_USER_MODEL = 'authapp.User'  # âœ… Use your custom user model


ALLOWED_HOSTS = os.getenv("ALLOWED_HOSTS").split(",")

STATIC_URL = "static/"
STATIC_ROOT = os.path.join(BASE_DIR, "staticfiles")

STATICFILES_STORAGE = 'whitenoise.storage.CompressedManifestStaticFilesStorage'

# Add WhiteNoise-specific settings
WHITENOISE_AUTOREFRESH = False  # Set to True only in development
WHITENOISE_USE_FINDERS = False  # Set to True only in development
WHITENOISE_MANIFEST_STRICT = True
WHITENOISE_COMPRESS = True  # Enable compression
WHITENOISE_COMPRESS_TIMEOUT = 60  # Compression timeout in seconds

LOGIN_URL = '/login/'


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "landing",
    "quiz",
    "result",
    "authapp",
    "account",
    "AIquiz",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    'whitenoise.middleware.WhiteNoiseMiddleware',
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "AcademIQ.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [os.path.join(BASE_DIR, 'templates')],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
            ],
        },
    },
]

WSGI_APPLICATION = "AcademIQ.wsgi.application"



# Database
# https://docs.djangoproject.com/en/5.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'dj_db_conn_pool.backends.mysql',
        'NAME': os.getenv("MYSQL_ADDON_DB"),  
        'USER': os.getenv("MYSQL_ADDON_USER"),     
        'PASSWORD': os.getenv("MYSQL_ADDON_PASSWORD"),         
        'HOST': os.getenv("MYSQL_ADDON_HOST"),     
        'PORT': '3306',
        'POOL_OPTIONS': {  # Add connection pool options
            'POOL_SIZE': 20,  # Number of connections to keep open
            'MAX_OVERFLOW': 10,  # Max number of additional connections to open if needed
            'POOL_TIMEOUT': 30,  # Seconds to wait before timeout error when pool is full
            'POOL_RECYCLE': 1800,  # Seconds before a connection is recycled (30 minutes)
        }
    }
}

# Password validation
# https://docs.djangoproject.com/en/5.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]


# Internationalization
# https://docs.djangoproject.com/en/5.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_TZ = True

# Session Settings
SESSION_COOKIE_AGE = 86400  #  24 hours
SESSION_EXPIRE_AT_BROWSER_CLOSE = True
SESSION_SAVE_EVERY_REQUEST = False
    

# Default primary key field type
# https://docs.djangoproject.com/en/5.1/ref/settings/#default-auto-field

DEFAULT_AUTO_FIELD = "django.db.models.BigAutoField"
